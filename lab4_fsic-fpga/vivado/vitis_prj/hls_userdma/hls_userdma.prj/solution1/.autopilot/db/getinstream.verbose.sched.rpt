

================================================================
== Vitis HLS Report for 'getinstream'
================================================================
* Date:           Mon May 27 18:41:36 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hls_userdma.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.573 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 3 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.05>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%in_Img_width_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_Img_width"   --->   Operation 4 'read' 'in_Img_width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%in_s2m_len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_s2m_len"   --->   Operation 5 'read' 'in_s2m_len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%in_en_clrsts_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %in_en_clrsts"   --->   Operation 6 'read' 'in_en_clrsts_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%and_ln61_loc = alloca i64 1"   --->   Operation 7 'alloca' 'and_ln61_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%in_val_user_loc = alloca i64 1"   --->   Operation 8 'alloca' 'in_val_user_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %s2m_enb_clrsts_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (3.63ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i1P0A, i1 %s2m_enb_clrsts_c, i1 %in_en_clrsts_read"   --->   Operation 10 'write' 'write_ln0' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %s2m_len_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (3.63ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i32P0A, i32 %s2m_len_c, i32 %in_s2m_len_read"   --->   Operation 12 'write' 'write_ln0' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i1 0, i1 0, void @empty_20"   --->   Operation 13 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %incount, void @empty_16, i32 0, i32 0, void @empty_29, i32 0, i32 0, void @empty_29, void @empty_29, void @empty_29, i32 0, i32 0, i32 0, i32 0, void @empty_29, void @empty_29, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %inbuf, void @empty_16, i32 0, i32 0, void @empty_29, i32 0, i32 0, void @empty_29, void @empty_29, void @empty_29, i32 0, i32 0, i32 0, i32 0, void @empty_29, void @empty_29, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %inStreamTop_V_last_V, i7 %inStreamTop_V_user_V, i4 %inStreamTop_V_strb_V, i4 %inStreamTop_V_keep_V, i32 %inStreamTop_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_29, void @empty_29, void @empty_29, i32 0, i32 0, i32 0, i32 0, void @empty_29, void @empty_29, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln47 = br i1 %in_en_clrsts_read, void %VITIS_LOOP_48_1, void %if.else39" [userdma.cpp:47]   --->   Operation 17 'br' 'br_ln47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%in_Img_width_cast = zext i32 %in_Img_width_read"   --->   Operation 18 'zext' 'in_Img_width_cast' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (2.55ns)   --->   "%sub_i_i52 = add i33 %in_Img_width_cast, i33 8589934591"   --->   Operation 19 'add' 'sub_i_i52' <Predicate = (!in_en_clrsts_read)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%in_len_load = load i32 %in_len" [userdma.cpp:70]   --->   Operation 20 'load' 'in_len_load' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (2.55ns)   --->   "%add_ln48 = add i32 %in_len_load, i32 1" [userdma.cpp:48]   --->   Operation 21 'add' 'add_ln48' <Predicate = (!in_en_clrsts_read)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (2.55ns)   --->   "%empty = icmp_ult  i32 %add_ln48, i32 %in_s2m_len_read" [userdma.cpp:48]   --->   Operation 22 'icmp' 'empty' <Predicate = (!in_en_clrsts_read)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.69ns)   --->   "%umax = select i1 %empty, i32 %in_s2m_len_read, i32 %add_ln48" [userdma.cpp:48]   --->   Operation 23 'select' 'umax' <Predicate = (!in_en_clrsts_read)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty_63 = wait i32 @_ssdm_op_Wait"   --->   Operation 24 'wait' 'empty_63' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 25 [2/2] (3.50ns)   --->   "%call_ln70 = call void @getinstream_Pipeline_VITIS_LOOP_48_1, i32 %in_len_load, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i33 %inbuf, i33 %sub_i_i52, i32 %in_s2m_len_read, i32 %incount, i3 %in_val_user_loc, i1 %and_ln61_loc, i32 %width_count" [userdma.cpp:70]   --->   Operation 25 'call' 'call_ln70' <Predicate = (!in_en_clrsts_read)> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln77 = store i32 0, i32 %in_len" [userdma.cpp:77]   --->   Operation 26 'store' 'store_ln77' <Predicate = (in_en_clrsts_read)> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln78 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %s2m_err, i1 0" [userdma.cpp:78]   --->   Operation 27 'write' 'write_ln78' <Predicate = (in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end41"   --->   Operation 28 'br' 'br_ln0' <Predicate = (in_en_clrsts_read)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.55>
ST_2 : Operation 29 [1/2] (0.00ns)   --->   "%call_ln70 = call void @getinstream_Pipeline_VITIS_LOOP_48_1, i32 %in_len_load, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i33 %inbuf, i33 %sub_i_i52, i32 %in_s2m_len_read, i32 %incount, i3 %in_val_user_loc, i1 %and_ln61_loc, i32 %width_count" [userdma.cpp:70]   --->   Operation 29 'call' 'call_ln70' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 30 [1/1] (2.55ns)   --->   "%icmp_ln56 = icmp_eq  i32 %umax, i32 1" [userdma.cpp:56]   --->   Operation 30 'icmp' 'icmp_ln56' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln70 = store i32 %umax, i32 %in_len" [userdma.cpp:70]   --->   Operation 31 'store' 'store_ln70' <Predicate = true> <Delay = 1.58>

State 3 <SV = 2> <Delay = 0.97>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%in_val_user_loc_load = load i3 %in_val_user_loc"   --->   Operation 32 'load' 'in_val_user_loc_load' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%and_ln61_loc_load = load i1 %and_ln61_loc"   --->   Operation 33 'load' 'and_ln61_loc_load' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node or_ln61)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %in_val_user_loc_load, i32 2" [userdma.cpp:58]   --->   Operation 34 'bitselect' 'tmp' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node or_ln61)   --->   "%xor_ln58 = xor i1 %tmp, i1 %icmp_ln56" [userdma.cpp:58]   --->   Operation 35 'xor' 'xor_ln58' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln61 = or i1 %and_ln61_loc_load, i1 %xor_ln58" [userdma.cpp:61]   --->   Operation 36 'or' 'or_ln61' <Predicate = (!in_en_clrsts_read)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln54 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %s2m_err, i1 %or_ln61" [userdma.cpp:54]   --->   Operation 37 'write' 'write_ln54' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln76 = br void %if.end41" [userdma.cpp:76]   --->   Operation 38 'br' 'br_ln76' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%ret_ln80 = ret" [userdma.cpp:80]   --->   Operation 39 'ret' 'ret_ln80' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.059ns
The critical path consists of the following:
	wire read operation ('in_Img_width_read') on port 'in_Img_width' [16]  (0.000 ns)
	'add' operation ('sub_i_i52') [32]  (2.552 ns)
	'call' operation ('call_ln70', userdma.cpp:70) to 'getinstream_Pipeline_VITIS_LOOP_48_1' [38]  (3.507 ns)

 <State 2>: 2.552ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln56', userdma.cpp:56) [41]  (2.552 ns)

 <State 3>: 0.978ns
The critical path consists of the following:
	'load' operation ('in_val_user_loc_load') on local variable 'in_val_user_loc' [39]  (0.000 ns)
	'xor' operation ('xor_ln58', userdma.cpp:58) [43]  (0.000 ns)
	'or' operation ('or_ln61', userdma.cpp:61) [44]  (0.978 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
